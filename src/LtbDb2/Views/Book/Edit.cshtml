@model LtbDb.Models.BookEditContainer
@using LtbDb.Core.Interfaces
@inject IImageService ImageService

@{
	Layout = "~/Views/Shared/_Layout.cshtml";

	if(Model.Book.Id == 0) {
		ViewBag.Title = "Neues Buch | ";
	} else {
		ViewBag.Title = $"Nr. {Model.Book.Number} - {Model.Book.Title} | {Model.Book.Category} | ";
	}
}

<form asp-controller="book" asp-action="edit" method="post" enctype="multipart/form-data" id="book-form" asp-antiforgery="false">
	<h2>Buch</h2>
	<div class="details">
		<div style="float: left;">
			
			<!-- number -->
			<div class="block">
				<label for="number">Nummer</label>
			</div>
			<div class="block">
				<input class="input" type="text" id="number" name="number" value="@Model.Book.Number" placeholder="Nummer der Ausgabe" /> @Html.ValidationMessage("number")
			</div>

			<!-- titel -->
			<div class="block">
				<label for="title">Titel</label>
			</div>
			<div class="block">
				<input class="input" type="text" id="title" name="title" value="@Model.Book.Title" placeholder="Titel der Ausgabe" /> @Html.ValidationMessage("title")
			</div>

			<!-- category -->
			<div class="block">
				<label for="category">Kategorie</label>
			</div>
			<div class="block">
				<input class="input c" type="text" id="category" name="category" value="@Model.Book.Category" placeholder="Kategorie der Ausgabe" /> @Html.ValidationMessage("category")
			</div>

			<!-- stories -->
			<div class="block">
				<label>Inhalt</label>
			</div>
			<div class="block" id="story-container">
				@foreach (var story in Model.Book.Stories)
				{
				<div class="story">
					<input class="input" type="text" name="stories" value="@story" placeholder="Inhalt" /> <span class="button-green story-ins" title="Eintrag darüber einfügen."><i class="material-icons material-icons-small">add</i></span> <span class="button-red story-rem" title="Eintrag entfernen."><i class="material-icons material-icons-small">remove</i></span>
				</div>
				}
			</div>
			<div class="block">
				<span class="button-green" id="story-add">Inhalt hinzufügen</span> @Html.ValidationMessage("stories")
			</div>

			<!-- tags -->
			<div class="block">
				<label for="tags">Tags</label>
			</div>
			<div class="block">
				<input class="input t" type="text" id="tags" name="tags" value="@String.Join("; ", Model.Book.Tags)" placeholder="Tags" /> @Html.ValidationMessage("tags")
			</div>

			<div class="block">
				<input class="button-green" type="submit" value="Speichern" />
			</div>

		</div>
		<div style="float: right; position: relative; width: 200px; height: 200px; text-align: center;">
			<input style="display: none;" name="image" type="file" id="image-upload" />
			<img style="cursor: pointer;" id="image" src="@ImageService.GetImageWebPath(Model.Book.Filename, ImageType.PreferThumbnail)" alt="Cover" title="Klicken, um ein Bild auszuwählen." />
			
			<input type="hidden" name="filename" value="@ImageService.GetImageWebPath(Model.Book.Filename)" />
			<input type="hidden" name="remove" value="false" id="remove" />

			<div style="position: absolute; top: -24px; right: 8px;">
				<span class="pointer" id="image-reset" data-src="@ImageService.GetImageWebPath(Model.Book.Filename)" title="Bild zurücksetzen." style="display: none;"><i class="material-icons bigger">undo</i></span>
				<span class="pointer" id="image-delete" data-src="@ImageService.GetDefaultImage()" title="Bild löschen."><i class="material-icons bigger">delete_forever</i></span>
			</div>
			@Html.ValidationMessage("image")
		</div>
	</div>
</form>